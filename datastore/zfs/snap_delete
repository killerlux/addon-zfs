#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2023, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/zfs.conf

# -------- Get cp and datastore arguments from OpenNebula core ------------

if [ -n "$2" ]; then
    DRV_ACTION="$1"
    ID="$2"
else
    DRV_ACTION=`cat -`
    ID="$1"
fi

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/TARGET_SNAPSHOT)

unset i

SRC="${XPATH_ELEMENTS[i++]}"
SNAP_ID="${XPATH_ELEMENTS[i++]}"
DST_HOST=$(echo ${SRC} | awk -F ':' '{ print $1 }')
ZVOL=$(echo ${SRC} | awk -F ':' '{ print $2 }')
SNAPSHOT_NAME="one-snapshot-${SNAP_ID}"

DESTROY_CMD=$(cat <<EOF
    set -e
    $SUDO $ZFS_CMD destroy ${ZVOL}@${SNAPSHOT_NAME}

EOF
)

ssh_exec_and_log "$DST_HOST" "$DESTROY_CMD" \
    "Error removing snapshot ${ZVOL}@${SNAPSHOT_NAME}"

exit 0